import numpy as np
import scipy as py
from sklearn.naive_bayes import MultinomialNB

traindata = np.loadtxt('Downloads/20news-bydate/matlab/train.data')
trainlabel = np.loadtxt('Downloads/20news-bydate/matlab/train.label')
testdata = np.loadtxt('Downloads/20news-bydate/matlab/test.data')
testlable = np.loadtxt('Downloads/20news-bydate/matlab/test.label')

with open('Downloads/vocabulary.txt','r') as f:
    vocabr = f.read()
vocabr = vocabr.split()

in_traindata = list(traindata[:,0])
in_trainlabel = list(trainlabel)
in_testdata = list(testdata[:,0])
in_testlabel = list(testlabel)

def split_array(Singrp):
    indlist = range(len(vocabr)+1)[1:]
    lstgrp = list()
    for i in Singrp[:,1]:
        indlist[indlist.index(i)] = Singrp[i, 2]
    return(indlist)

trainlist = list()
def bulit_array(obj, label):
    traingroup = np.split(obj, list(np.unique(obj)))
    for ind in np.unique(obj):
        trainlist.append(split_array(traingroup[int(ind)]))
    trainarray = np.array(trainlist)
    return(trainarray)
    
# smooth and to avoid underflow
trainArray = bulit_array(traindata, trainlabel)


lsmthtrain = np.log(np.add(trainArray, 1))


clf = MultinomialNB()
clf = clf.fit(trainarry, trainlabel)

